
<!DOCTYPE html>
<html>
    <head>
        <title>Закрепление</title>
    </head>
    <body>
        <h1>Структура HTML</h1>
        <p>Язык HTML состоит из множества тегов. Каждый тег имеет определенный смысл и предназначение.</p>
        <p>Каждый тег может иметь определенный набор атрибутов.</p>
        <h1>Структура CSS</h1>
        <p>CSS состоит из селекторов и свойств.</p>
        <p>Селекторы описывают какие именно элементы или группы элементов будут обладать заданными свойствами.</p>
        <h1>Потренировался</h1>
        <p>Пора двигаться дальше</p>
    </body>
</html>


/* Это правило задаёт общий размер шрифта */
body {
    font-size: 16px;
}

/* Это правило — размер для заголовков первого уровня */
h1 {
    font-size: 32px;
}

/* А это — тень для заголовков первого уровня */
h1 {
    text-shadow: 2px 2px 0 #ccc;
}

Язык HTML состоит из тегов. Теги — это те самые кирпичики, из которых построена каждая веб-страница.

Каждый тег начинается с символа < и заканчивается символом >, например: <p>.

Все теги можно разделить на парные и одиночные. Каждый парный тег состоит из двух частей: открывающего тега и закрывающего. Внутри закрывающего тега используется символ /.

Вот пример парного тега:
<p>Абзац</p>

/* Так можно указывать шрифт для всего документа */
body {
    font-family: Georgia, serif;
}

<em>обернуть</em> -- курсив
<strong>текст</strong> -- bold

Кстати, в HTML-редакторе вы увидите такие фрагменты кода: <!-- текст -->. Они называются «комментарии», и браузер не отображает их на странице.

Раньше одиночные теги писались с закрывающим слешом перед закрывающей скобкой. Например: <br/>.
В новом стандарте HTML5 использование закрывающего слеша в одиночных тегах необязательно.

<br> -- перенос строки
<hr> -- горизонтальная полоса

Теги могут иметь атрибуты. Некоторые теги есть смысл использовать только с атрибутами. Наиболее яркий пример — тег <img>, обозначающий изображение. Для него обязательно нужно указывать атрибут src, который задаёт адрес картинки (иначе браузер не сможет загрузить её).

В общем случае тег записывается следующим образом:
<имя-тега атрибут1="значение1" атрибут2="значение2" ...>

<img src="/assets/course1/keks.jpg" class="photocard">

/* Пример оформления фотографии */
.photocard {
    display: block;
    width: 300px;
    margin: 20px auto;
    border-radius: 10px;
    box-shadow: 0 0 5px #666;
}

 <blockquote class="nice-cite">
                <p>Привет! Меня зовут Кекс и я ваш будущий инструктор. Я веб-разработчик и живу в Санкт-Петербурге.</p>
                <p>До встречи в последующих курсах!</p>
            </blockquote>

<blockquote> -- цитата

Самый простой способ применить стили к тегу заключается в использовании атрибута 
style. Например:
<p style="color: red;">...</p>

В этом примере абзацу задан красный цвет шрифта. Такой способ задания стилей 
называют «инлайновые стили» или «встроенные стили».

Синтаксис таких стилей очень простой: "свойство: значение;". Причём свойств может 
быть несколько.

Задавать стили каждого тега с помощью атрибута style очень затратно и хлопотно. А ещё это приводит к засорению HTML-кода избыточными, повторяющимися кусками CSS.

К счастью, есть и другие способы подключения стилей. Первый — подключение внешнего файла с помощью тега <link>, а второй — использование специального тега <style>. Подробнее эти методы будут разобраны в последующих курсах.

Когда вы задаёте стили тега с помощью атрибута style, браузер сразу же понимает, к какому именно тегу применить эти стили. Но когда стили подключаются с помощью 
внешнего файла или через тег <style>, браузер ищет стилизуемые теги с помощью 
«селекторов».

В общем случае синтаксис CSS-правил выглядит так:

селектор {
  свойство1: значение1;
  свойство2: значение2;
  ...
}

Язык селекторов очень мощный и гибкий. Простейший тип селекторов — селекторы по 
имени тега: p, h1 и так далее. Когда браузер видит такой селектор, он применяет 
стили из правила ко всем подходящим тегам. Например, ко всем абзацам или ко всем 
заголовкам первого уровня.

h1 {
    color: #999999;
}

Классы в CSS
Класс — это всего лишь один из атрибутов HTML-тегов, например:

<p class="important">...</p>
<p class="help">...</p>

В CSS можно задавать стили только для элементов с определённым классом. Для этого
 используется селектор по классу, который пишется так .имя-класса, например:

.important { color: red; } — выберет все теги с классом "important"
.help { color: green; }    — выберет все теги с классом "help"

Имя класса может содержать в себе латинские символы, цифры, символ дефиса - и 
подчёркивания _ и начинаться оно должно с латинского символа.

<!DOCTYPE html>
<html>
    <head>
        <title>Классы в CSS</title>
    </head>
    <body>
        <h1>Конспект курса</h1>
        <p class="learned-ok">Парные теги.</p>
        <p class="learned-ok">Одиночные теги.</p>
        <p class="learned-ok">Атрибуты тегов.</p>
        <p class="learned-ok">Инлайновые (встроенные) стили.</p>
        <p class="learning-in-progress">Внешние стили.</p>
        <p class="not-learned">Стилизация по классам.</p>
    </body>
</html>

CSS:
.learned-ok {
    color: green;
}

.learning-in-progress {
    color: orange;
}

.not-learned {
    color: red;
}

Итак, язык CSS состоит из селекторов и свойств. Селекторы указывают на то, к каким элементам применять стили, а свойства — на то, как именно отображать элементы.

.learned-ok {
    color: green;
    text-decoration: line-through;
}

.learning-in-progress {
    color: orange;
    padding-left: 15px;
}

.not-learned {
    color: red;
    background-color: #FFF0F0
}





