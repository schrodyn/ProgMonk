Каждый HTML-документ должен начинаться с декларации типа документа или 
«доктайпа». Тип документа нужен, чтобы браузер мог определить версию HTML 
и правильно  отобразить страницу.

для последней версии HTML все очень просто:
<!DOCTYPE html>

Последнюю версию HTML ещё называют HTML 5.

Простейшая HTML-страница состоит как минимум из трёх тегов.

Тег <html> — это контейнер, в котором находится всё содержимое страницы, включая 
теги <head> и <body>. Как правило, тег <html> идёт в документе вторым после 
доктайпа.

Тег <head> предназначен для хранения других элементов, цель которых — помочь 
браузеру в работе с данными. Содержимое этого тега не отображается напрямую.

Тег <body> предназначен для хранения содержания веб-страницы (контента), 
отображаемого в окне браузера.

<!DOCTYPE html>
<html>
    <head></head>
    <body>
        <!-- Содержание страницы -->
    </body>
</html>

Заголовок страницы — это тот текст, который отображается в левом верхнем углу 
браузера, а также во вкладках.

Чтобы задать заголовок страницы, нужно использовать тег <title> внутри тега 
<head>. Например, вот так:

<head>
  <title>Курсы — HTML Academy</title>
</head>

Кодировка HTML-страницы

Кодировку HTML-страницы нужно указывать для того, чтобы веб-браузер мог правильно
отображать текст на странице. Если браузер неправильно «угадает» кодировку, то 
вместо текста будут отображаться иероглифы.

Чтобы сообщить браузеру кодировку HTML-страницы, необходимо внутри тега <head> использовать тег:

<meta charset="имя кодировки">

Самая распространённая современная кодировка — utf-8. Используйте её во всех своих проектах.

Ключевые слова:
Есть целое семейство тегов <meta>, называемых мета-тегами. Их можно использовать 
внутри тега <head>.

Мета-теги различаются набором атрибутов и их значений, вот некоторые из атрибутов:
 content, http-equiv, name и scheme.

Мета-теги хранят полезную для браузеров и поисковых систем информацию. Один из 
таких тегов — это описание ключевых слов страницы. Задаётся он так:

<meta name="keywords" content="разные, ключевые, слова">

В атрибуте content через запятую перечисляются самые важные слова из содержания 
страницы. Раньше этот тег был очень важен для поисковиков. Каково положение дел 
сейчас — большой секрет Яндекса и Гугла.

Ещё один полезный для поисковых систем мета-тег — краткое описание страницы. 
Оно задаётся так:

<meta name="description" content="краткое описание">

В атрибуте content должно быть краткое содержание или аннотация страницы. 
Оно часто используется поисковиками при отображении результатов поиска.

Комментарий в HTML-коде задаётся так:
<!-- любой текст -->

Текст внутри комментария не отображается браузером на странице. Комментарии обычно используются в следующих случаях:
Для комментирования кода. Всегда полезно оставить подсказку.
Для временного отключения кода. 
Удалять код неудобно, так как его надо будет 
восстанавливать, а закомментировать и потом раскомментировать — самое лучшее 
решение.

Комментарии можно использовать в любом месте страницы, кроме тега <title> — внутри
 него они не работают.

Чтобы быстро закомментировать или раскомментировать строку кода в HTML или CSS 
редакторе, можете использовать сочетание клавиш ctrl + / или cmd + /.

Подключение стилей
------------------

CSS-стили можно писать внутри HTML-кода страницы или подключать их как внешний 
файл.
В первом случае стили называются «встроенными» или «инлайновыми», а писать их 
нужно внутри тега <style>. Этот тег обычно размещают внутри <head>. Например:

<head>
  <style>
    CSS-код
  </style>
</head>

Инлайновые стили используют не так часто, например, для оптимизации скорости 
загрузки страницы. Чаще используют внешние стили, c которыми мы познакомимся 
позже.

Комментарии в CSS работают так же, как в HTML — позволяют временно отключить 
какой-то кусок кода.
CSS-комментарии задаются с помощью символов /* и */:

/*
h1 {
  color: red; 
}
*/

Подключение внешних стилей

Чаще всего стили подключают из внешнего файла с расширением .css. Для этого 
используется тег <link>. Например:

<head>
  <link href="style.css" rel="stylesheet">
</head>

В атрибуте href задают адрес файла, а атрибут rel="stylesheet" говорит браузеру, 
что мы подключаем стили, а не что-то другое.

Лучше подключать стили внутри <head>, но это необязательно. Тег <link> будет 
работать и в другом месте страницы.

В вебе следующее разделение ролей: HTML отвечает за структуру документа, стили — 
за его внешний вид, а скрипты — за поведение. С помощью скриптов, например, можно
«оживлять» страницу, добавляя анимацию и другие эффекты. Скрипты создаются с 
помощью языка JavaScript.

Скрипты подключаются так же, как и стили: их либо пишут внутри страницы, либо 
подключают как внешние файлы.

Встроенные скрипты пишут внутри тега <script>. Например:
<script>
  JavaScript-код
</script>
Тег <script> можно использовать в любом месте HTML-документа, но лучше вставлять 
его в самом конце перед закрывающим тегом </body>.

Часть возможностей JavaScript постепенно переходит в CSS, например, возможность 
задавать плавное изменение значений свойств. Вы увидите это в задании.

Подключение внешних скриптов

Скрипты чаще всего подключают из внешних файлов с расширением .js. Для этого 
используют тег <script> с атрибутом src, в котором указывается путь к файлу. 
Например:
<script src="scripts.js"></script>

Обратите внимание, что тег <script> парный. Если вы подключаете внешние скрипты, 
то просто ничего не пишите внутри тега.
Внешние скрипты лучше подключать перед закрывающим тегом </body>.

Не забывайте, что хорошим тоном считается подключать внешние стили в <head>, 
а скрипты перед закрывающим тегом </body>.


