Введение в CSS

Этот язык отвечает за внешний вид HTML-страницы. Синтаксис языка достаточно 
прост: он состоит из селекторов и свойств.

Весь CSS-код состоит из повторяющихся блоков следующего вида:

селектор {
  свойство1: значение;
  свойство2: значение;
}

Такой блок называется «CSS-правило». Каждое CSS-правило содержит хотя бы один 
селектор и свойство.

p {
    color: #999999;
}

h1 {
    font-family: Tahoma;
}

h2 {
    color: #0088cc;
}

Класс тега можно задать с помощью атрибута class, который содержит имя класса 
(или имена классов через пробел):

<p class="help"></p>
<p class="help error"></p>

Селектор с использованием класса задаётся так: .имя_класса

.help { ... }
.error { ... }

Свойства для оформления текста
---------------

.underline {
    text-decoration: underline;
}

.bold {
  font-weight: bold;  
}

.italic {
    font-style: italic;
}

.p-first {
    margin-left: 50px;
}

.p-second {
    padding: 20px;
}

.p-third {
    width: 50%;
}

Позиционирование элементов
С помощью позиционирования можно очень точно и гибко управлять расположением 
элементов.
Позиционирование применяют для создания сложных «многослойных» интерфейсов, 
таких как всплывающие окна или галереи, а также для вёрстки мелких декоративных
элементов. 

Главным свойством для работы с позиционированием является position, которое 
переключает режимы позиционирования элемента. Ещё четыре свойства: top, right, 
bottom, left, управляют расположением элемента. 
И последнее свойство z-index управляет порядком слоёв.

.p-absolute {
    position: absolute;
    left: 100px;
    bottom: 200px;
}

Создание сетки страницы

Типичный веб-сайт состоит из шапки, главного меню, блока с основным содержанием,
 боковых колонок, подвала. 
Эти блоки могут быть расположены друг под другом, в несколько колонок или ещё 
сложнее. Такое взаимное расположение основных блоков сайта и называют «сеткой» 
или «раскладкой».

<!DOCTYPE html>
<html>
    <head>
        <meta charset="utf-8">
        <title>Создание сетки страницы</title>
    </head>
    <body>
        <div class="header">Логотип и меню</div>

        <div class="left-column">Основное содержание страницы</div>

        <div class="right-column">Боковая колонка</div>

        <div class="footer">Подвал</div>
    </body>
</html>

div {
    margin-bottom: 15px;
    padding: 10px 25px 10px 25px;
    background-color: #dff0d8;
}

.left-column {
    width: 50%;
    min-height: 100px;
    background-color: #fcf8e3;
    float: left;
}

.right-column {
    width: 25%;
    min-height: 100px;
    background-color: #d9edf7;
    float: right;
}

.footer {
    clear: both;
}

самые главные здесь свойства:
float: left и float:right

а также clear: both;

---------------------
useful css:

padding: 10px;
background-color: #dff0d8;
border: 1px solid #d6e9c6;
color: #468847; -- text

Приоритеты CSS

Когда для одного и того же элемента есть несколько CSS-правил с одинаковыми 
свойствами, браузер использует понятия приоритетов и специфичности, чтобы 
выбрать значение свойства из нескольких возможных. Упрощённо, можно сказать что:

1) CSS-правила в значении атрибута style самые приоритетные,
2) за ними идёт селектор с id,
3) затем селектор с классом,
4) затем селектор с именем тега.

Наследование работает не для всех свойств. Некоторые свойства применяются только
 к самому элементу и не переходят к его потомкам.
К таким ненаследуемым свойствам относятся: ширина, высота, отступы, режим 
позиционирования и другие. 

text-transform: uppercase;
text-align: center;
display: block;
color: red;



